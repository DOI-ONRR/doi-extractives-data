{"version":3,"sources":["webpack:///webpack/bootstrap 3007926512447fd56c24?0587**","webpack:///./js/src/narrative.js","webpack:///./js/components/sticky-nav.js?7bd1","webpack:///./js/components/open-list-nav.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;ACtCA;AACA;;;;;;;;ACDA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,gBAAe;AACf;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAW;AACX,UAAS;AACT;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL,IAAG;AACH;AACA;;;;AAIA;;AAEA;;AAEA;AACA;AACA;AACA,IAAG;;AAEH;AACA;AACA,iBAAgB;;AAEhB;AACA;;AAEA;AACA;;AAEA;;;AAGA,EAAC;;;;;;;;AC/ND;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAqB,0BAA0B;AAC/C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAuB,0BAA0B;AACjD;AACA;AACA;AACA,YAAW;AACX;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;;AAEP;AACA;AACA;AACA,QAAO;;AAEP;;AAEA;AACA;AACA;;;AAGA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAU;AACV;AACA;AACA;AACA;AACA,QAAO;AACP;;AAEA;;AAEA;;AAEA;AACA,IAAG","file":"narrative.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 3007926512447fd56c24\n **/","require('./../components/sticky-nav.js');\nrequire('./../components/open-list-nav.js');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/src/narrative.js\n ** module id = 0\n ** module chunks = 3\n **/","(function(exports) {\n\n  var scrollLeft,\n    scrollTop;\n\n  var findScrollPositions = function(){\n    scrollLeft = (window.pageXOffset !== undefined)\n      ? window.pageXOffset\n      : (document.documentElement\n        || document.body.parentNode\n        || document.body).scrollLeft;\n    scrollTop = (window.pageYOffset !== undefined)\n      ? window.pageYOffset\n      : (document.documentElement\n        || document.body.parentNode\n        || document.body).scrollTop;\n\n  };\n\n  var StickyNav = function() {\n\n    this.elems = {\n      sticky : document.querySelector('.sticky_nav'),\n      main: document.querySelector('main')\n    };\n\n    this.attrStickyOffset = this.elems.sticky.getAttribute('data-sticky-offset');\n    this.attrOffsetBottom = parseInt(this.elems.sticky.getAttribute('data-offset-bottom')) || 0;\n    this.maxWidth = this.elems.sticky.getAttribute('data-max-width');\n    var attrAbsolute = this.elems.sticky.getAttribute('data-absolute');\n\n    this.attrParent = this.elems.sticky.getAttribute('data-offset-parent');\n\n    this.elems.parent = this.elems.sticky.getAttribute('data-offset-parent')\n      ? this.elems.sticky.parentNode\n      : null;\n\n    this.determineScreen = function() {\n      var windowWidth = window.innerWidth || document.body.clientWidth;\n      this.wasMobile = this.isMobile;\n      this.isMobile = windowWidth < 768;\n    };\n\n    this.determineScreen();\n\n    this.isAbsolute = function() {\n\n      var isAbsolute = (attrAbsolute === 'true' && !this.isMobile)\n        ? true\n        : false;\n      return isAbsolute;\n    }\n\n\n\n\n    this.status;\n    this.lastStatus;\n    this.lastWidth;\n    this.lastWindowWidth;\n  };\n\n  StickyNav.prototype = {\n    setOffset: function () {\n      this.offset = this.attrStickyOffset\n        ? parseInt(this.attrStickyOffset)\n        : !this.elems.parent\n          ? this.elems.sticky.offsetTop\n          : ( this.attrParent === 'mobile' && this.isMobile )\n            ? this.elems.parent.offsetTop - this.elems.sticky.offsetHeight\n            : this.elems.sticky.offsetTop\n    },\n    getPositions: function () {\n\n      this.height = this.elems.sticky.clientHeight;\n\n      this.lastWidth = this.width || 'initial';\n      var windowWidth = window.innerWidth || document.body.clientWidth,\n        windowBump = windowWidth > 1044 || this.isMobile ? 0 : -20;\n      this.width = this.elems.parent\n        ? this.elems.parent.clientWidth + windowBump + 'px'\n        : this.maxWidth;\n\n      this.mainOffset = this.elems.main.offsetTop;\n      this.mainHeight = this.elems.main.clientHeight;\n\n      this.diffTop = scrollTop - this.mainOffset - this.offset;\n\n      this.diffBottom = scrollTop + this.height - this.mainHeight - this.mainOffset;\n      this.lastStatus = this.status;\n      if (this.diffTop >= 0){\n        this.status = 'fixed';\n        if (this.diffBottom >= 0){\n          this.status = 'absolute';\n        }\n      } else {\n        this.status = 'static';\n      }\n    },\n    needsUpdate: function(init) {\n      var statusChange = this.status !== this.lastStatus;\n      var sizeChange = this.width !== this.lastWidth;\n      var updateNeeded = undefined;\n      if (!statusChange && sizeChange) {\n        updateNeeded = 'size';\n      } else if (statusChange && !sizeChange) {\n        updateNeeded = 'status';\n      } else if (statusChange && sizeChange || init === 'init') {\n        updateNeeded = 'both';\n      }\n      return updateNeeded;\n    },\n    update: function(updateNeeded) {\n      if (!updateNeeded) {\n        return;\n      } else {\n        if (this.diffTop >= 0){\n          if (updateNeeded === 'status' || updateNeeded === 'both') {\n            this.elems.sticky.style.position = 'fixed';\n            this.elems.sticky.style.top = 0;\n            this.elems.sticky.classList.remove('js-transparent');\n            this.elems.sticky.classList.add('js-color');\n          }\n\n          if (updateNeeded === 'size' || updateNeeded === 'both') {\n            this.elems.sticky.style.width = this.width;\n          }\n\n          if (this.diffBottom >= 0){\n            if (updateNeeded === 'status' || updateNeeded === 'both') {\n              this.elems.sticky.style.position = 'absolute';\n\n              if ( this.attrParent === 'mobile' && this.isMobile ) {\n                this.elems.sticky.style.top = this.mainHeight - this.offset - this.height - this.attrOffsetBottom + 'px';\n              } else {\n                this.elems.sticky.style.top = this.mainHeight - this.height - this.attrOffsetBottom + 'px';\n              }\n            }\n          }\n        } else {\n          if (updateNeeded === 'status' || updateNeeded === 'both') {\n            this.elems.sticky.classList.remove('js-color');\n            this.elems.sticky.classList.add('js-transparent');\n            if (this.isAbsolute()) {\n              this.elems.sticky.style.position = 'absolute';\n            } else {\n              this.elems.sticky.style.position = 'static';\n            }\n          }\n\n          if (updateNeeded === 'size' || updateNeeded === 'both') {\n            this.elems.sticky.style.width = this.width;\n          }\n        }\n      }\n    },\n    throttle : function (fn, threshhold, scope) {\n      threshhold || (threshhold = 250);\n      var last,\n          deferTimer;\n      return function () {\n        var context = scope || this;\n\n        var now = +new Date,\n            args = arguments;\n        if (last && now < last + threshhold) {\n          // hold on to it\n          clearTimeout(deferTimer);\n          deferTimer = setTimeout(function () {\n            last = now;\n            fn.apply(context, args);\n          }, threshhold);\n        } else {\n          last = now;\n          fn.apply(context, args);\n        }\n      };\n    },\n    run: function(init) {\n      findScrollPositions();\n      if (init === 'init') {\n        this.setOffset();\n      }\n      this.getPositions();\n      this.update(this.needsUpdate(init));\n    }\n  };\n\n  var stickyNav = new StickyNav();\n\n  var loadDelay = stickyNav.elems.sticky.getAttribute('data-load-delay');\n  if (loadDelay) {\n    setTimeout(function() {\n      stickyNav.run('init');\n    }, parseInt(loadDelay));\n  } else {\n    stickyNav.run('init');\n  }\n\n\n\n  window.addEventListener('scroll', stickyNav.throttle(stickyNav.run, 130, stickyNav));\n\n  window.addEventListener('resize', stickyNav.throttle(stickyNav.run, 150, stickyNav));\n\n  // documentation: https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver\n  var observer = new MutationObserver(function () {\n    stickyNav.run();\n  });\n\n  // set up your configuration\n  // this will watch to see if you insert or remove any children\n  var config = { subtree: true, childList: true };\n\n  // start observing\n  observer.observe(stickyNav.elems.sticky, config);\n\n  // other potential elem listener\n  // http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/\n\n  exports.stickyNav = stickyNav;\n\n\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/components/sticky-nav.js\n ** module id = 1\n ** module chunks = 0 3\n **/","(function(exports) {\n    function getScrollTop() {\n      return (window.pageYOffset !== undefined)\n        ? window.pageYOffset\n        : (document.documentElement\n          || document.body.parentNode\n          || document.body).scrollTop;\n    }\n\n    function isElementInViewport(el) {\n      var rect = el.getBoundingClientRect();\n\n      return rect.bottom > 0 &&\n          rect.right > 0 &&\n          rect.left < (window.innerWidth || document. documentElement.clientWidth) &&\n          rect.top < (window.innerHeight || document. documentElement.clientHeight);\n    }\n\n    var OpenListNav = function() {\n      // init OpenListNav Properties\n      this.active = window.location.hash || '#intro';\n      this.navItems = document.querySelectorAll('[data-nav-item]');\n      this.navSelect = $('[data-nav-options]');\n      this.navIsSelect = !!this.navSelect.length;\n      this.navHeaders = document.querySelectorAll('[data-nav-header]');\n      this.scrollTop = {\n        current: getScrollTop(),\n        prev: getScrollTop(),\n        direction: 'down'\n      };\n    };\n\n    OpenListNav.prototype.updateScrollTop = function() {\n      this.scrollTop.prev = this.scrollTop.current;\n      this.scrollTop.current = getScrollTop();\n      this.scrollTop.direction = (this.scrollTop.current >= this.scrollTop.prev)\n        ? 'down'\n        : 'up';\n    };\n\n    OpenListNav.prototype.removeActive = function(){\n      this.active = null;\n      for (var i = 0; i < this.navItems.length; i++) {\n        this.navItems[i].setAttribute('data-active', false);\n      }\n    };\n\n    OpenListNav.prototype.addActive = function(el, name){\n      if (!el){\n        el = document.querySelector('[data-nav-item=\"' + name + '\"]');\n        this.active = name;\n        el.setAttribute('data-active', true);\n      } else {\n        this.active = el.getAttribute('data-nav-item');\n        el.setAttribute('data-active', true);\n      }\n    };\n\n    OpenListNav.prototype.update = function(el, name){\n      this.removeActive();\n      this.addActive(el, name);\n    };\n\n    OpenListNav.prototype.updateSelectField = function(newValue) {\n      if (newValue){\n        this.navSelect.val(newValue);\n      }\n    };\n\n    OpenListNav.prototype.registerEventHandlers = function(){\n      var self = this;\n      if (!this.navIsSelect) {\n        for (var i = 0; i < this.navItems.length; i++) {\n          var item = this.navItems[i];\n          item.addEventListener('click', function () {\n            self.update(this);\n          });\n        }\n      }\n\n      window.addEventListener('scroll', function() {\n        self.updateScrollTop();\n        // TODO: throttle\n        self.detectNavChange();\n      });\n\n      window.addEventListener('resize', function(){\n        // TODO: throttle\n        self.detectNavChange();\n      });\n\n    };\n\n    OpenListNav.prototype.changeHandler = function(selector) {\n      window.location.hash = selector.value;\n    };\n\n\n    OpenListNav.prototype.detectNavChange = function(){\n\n      var self = this;\n\n      // initialize nav status as not updated\n      var updated = false;\n\n       Array.prototype.forEach.call(this.navHeaders, function(header){\n         var inViewPort = isElementInViewport(header);\n         if (inViewPort && !self.navIsSelect && !updated) {\n           self.update(null, header.name);\n           updated = true;\n         } else if(inViewPort && self.navIsSelect && !updated) {\n           var newName = header.name || header.id;\n          self.updateSelectField(newName);\n           updated = true;\n         }\n      });\n    };\n\n    var openListNav = new OpenListNav();\n\n    openListNav.registerEventHandlers();\n\n    module.exports = openListNav;\n  })(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/components/open-list-nav.js\n ** module id = 23\n ** module chunks = 3\n **/"],"sourceRoot":""}